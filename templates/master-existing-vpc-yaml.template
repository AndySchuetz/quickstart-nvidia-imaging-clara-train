Description: >

  This template requires an existing VPC, with a pair of public and private subnets  
  across two Availability Zones; an Internet Gateway, with a default 
  route on the public subnets; a pair of NAT Gateways (one in each AZ);
  and corresponding default routes in the private subnets.

  The template deploys a bastion host to access private subnets, and an EFS to share
  and persist data across multiple container instances.

  It deploys the Clara Train SDK as a service on a highly available ECS cluster, 
  with an AutoScaling Group distributed across two Availability Zones. 

Parameters:
  VPCID:
    Description: VPC that these resources should be deployed to
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    Description: CIDR for the VPC these resources should be deployed to
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    Type: String
  PublicSubnet1ID:
    Description: ID of the public subnet 1
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: ID of the public subnet 2
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1AID:
    Description: ID of the private subnet 1
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2AID:
    Description: ID of the private subnet 2
    Type: AWS::EC2::Subnet::Id
  KeyName: 
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  Cmk:
    Description: ID of an existing AWS KMS Customer Master Key (CMK) to encrypt file system. If left blank, an AWS service key will be used for encryption. ID can be Key ID, ARN, Key Alias, or Key Alias ARN.
    Default: ''
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), dots (.) and forward slash (/). The prefix should end with a forward slash (/).
    Default: quickstart-nvidia-clara/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), dots
      (.) and forward slash (/) and it should end with a forward slash (/).
    Type: String
  ECSHostInstanceType:
    Description: Amazon EC2 instance type for the ECS host instances.
    Type: String
    Default: p3.2xlarge
    AllowedValues:
    - p3.2xlarge
    - p3.8xlarge
    - p3.16xlarge
    - p3dn.24xlarge
  ClusterSize:
    Description: Number of ECS hosts to initially deploy.
    Type: String
    AllowedPattern: ^\d+$
    Default: 1
  DesiredServiceCount:
    Description: Number of instances of this task to run across the cluster.
    Type: String
    AllowedPattern: ^\d+$
    Default: 1
  SourceCidrIP: 
    Description: CIDR block from which connections to the load balancer will be accepted.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-32
    Type: String
  BastionKeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to Bastion Host.
    ConstraintDescription: Must be the name of an existing EC2 Key Pair
  BastionAccessCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: CIDR block from which connections to the bastion host will be accepted.
    Type: String

Mappings:
  Defaults:
    Bastion:
      InstanceType: t2.medium
    Clara:
      Uri: nvcr.io/nvidia/clara-train-sdk:v2.0

Conditions:
  GovCloudWestCondition: !Equals [ !Ref 'AWS::Region', us-gov-west-1]
  GovCloudEastCondition: !Equals [ !Ref 'AWS::Region', us-gov-east-1]

Resources:

  Bastion:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 
      - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template
      - QSS3Region: !If [ GovCloudWestCondition, s3.us-gov-west-1, !If [ GovCloudEastCondition, s3.us-gov-east-1, s3 ] ]
      Parameters:
        BastionInstanceType: !FindInMap [ Defaults, Bastion, InstanceType ]
        KeyPairName: !Ref BastionKeyPairName
        RemoteAccessCIDR: !Ref BastionAccessCidr
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        VPCID: !Ref VPCID

  ClaraCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/clara-cluster.template.yaml
        - QSS3Region: !If [ GovCloudWestCondition, s3.us-gov-west-1, !If [ GovCloudEastCondition, s3.us-gov-east-1, s3 ] ]
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        KeyName: !Ref KeyName
        VPC: !Ref VPCID
        VPCCIDR: !Ref VPCCIDR
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        PrivateSubnet1AID: !Ref PrivateSubnet1AID
        PrivateSubnet2AID: !Ref PrivateSubnet2AID
        InstanceType: !Ref ECSHostInstanceType
        ClusterSize: !Ref ClusterSize
        DesiredServiceCount: !Ref DesiredServiceCount
        ContainerImageRegistry: !FindInMap [ Defaults, Clara, Uri ]
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        SourceCidrIP: !Ref SourceCidrIP
        BastionSecurityGroupID: !GetAtt Bastion.Outputs.BastionSecurityGroupID
        PerformanceMode: generalPurpose
        Cmk: !Ref Cmk

Outputs:
  ClaraServiceUrl:
    Description: The URL endpoint for the Clara Train service
    Value: !Sub ${ClaraCluster.Outputs.ClaraServiceUrl}/

  ElasticFileSystemDnsName:
    Description: DNS name for the Amazon EFS file system.
    Value: !GetAtt ClaraCluster.Outputs.ElasticFileSystemDnsName